diff --git a/bdsim.cc b/bdsim.cc
index 2ef0704..da1e337 100644
--- a/bdsim.cc
+++ b/bdsim.cc
@@ -55,6 +55,7 @@
 
 #include "parser/gmad.h"  // GMAD parser
 
+#include <ctime>
 
 
 
diff --git a/configure b/configure
index 4dc1b6f..0f0207b 100755
--- a/configure
+++ b/configure
@@ -165,11 +165,15 @@ if test "$value" == "y"; then
 
 ROOT_sys="$ROOTSYS"
 
-printf "\n\n What is your ROOT installation directory?\n"
-
-
-read -p "[$ROOT_sys]" value
 
+if which root-config 2> /dev/null; then
+    printf " Using `which root-config`"
+    tmp=`which root-config`
+    value=${tmp%/bin/root-config}
+else
+    printf "\n\n What is your ROOT installation directory?\n"
+    read -p "[$ROOT_sys]" value
+fi
 
 if test "$value" == ""; then
 	value=$ROOT_sys
diff --git a/parser/parser.l b/parser/parser.l
index 65fd985..d029b99 100644
--- a/parser/parser.l
+++ b/parser/parser.l
@@ -109,7 +109,7 @@ include   BEGIN(incl);  //reserved commands
 beam { return BEAM; }
 option { return OPTION; }
 print { return PRINT; }
-echo { return ECHO; }
+echo { return PRINT; }
 "return" { return STOP; }
 stop {return STOP;}
 use { return USE; }
diff --git a/patches/Makefile.diff b/patches/Makefile.diff
new file mode 100644
index 0000000..e6e430b
--- /dev/null
+++ b/patches/Makefile.diff
@@ -0,0 +1,44 @@
+diff --git a/src/Makefile.in b/src/Makefile.in
+index 664523f..1675f0c 100644
+--- a/src/Makefile.in
++++ b/src/Makefile.in
+@@ -1,9 +1,16 @@
+ name=bdsim
+ G4TARGET=$(name)
+ G4EXLIB=true
+-
++ifndef G4TMP
++  G4TMP=@BINDIR@/tmp
++endif
++ifndef G4LIBDIR
++  G4LIBDIR=@G4LIBDIR@
++endif
+ G4WORKDIR=@BINDIR@
+-G4INSTALL=@G4INSTALL@
++ifndef G4INSTALL
++  G4INSTALL=@G4INSTALL@
++endif
+ ROOTSYS=@ROOTSYS@
+ G4VERSION=@G4VERSION@
+ G4MINORVERSION=@G4MINORVERSION@
+@@ -53,16 +61,18 @@ LDLIBS3 += $(ROOTLIBS)
+ 
+ # standard Geant4 make procedure
+ include $(G4INSTALL)/config/binmake.gmk
++include $(G4INSTALL)/config/architecture.gmk
+ 
+ 
+ CPPFLAGS += -DG4VERSION=$(G4VERSION) -DG4MINORVERSION=$(G4MINORVERSION) 
+ CPPFLAGS += @USE_ROOT@ -DCLHEP_VERSION=@CLHEP_VERSION@ 
+ CPPFLAGS += -I./parser
++CPPFLAGS += -I./include
+ CPPFLAGS += $(ROOTCFLAGS) 
+ CPPFLAGS += @USE_GDML@ @USE_LCDD@ @LCDD_CFLAGS@ 
+-CPPFLAGS += -g -Wall -Wno-non-virtual-dtor -I.
++CPPFLAGS += -g -Wno-non-virtual-dtor -I.
+ 
+-LDFLAGS += -L$(G4LIBDIR) -L./parser -lgmad @LCDD_LIBS@
++LDFLAGS += -L./parser -lgmad @LCDD_LIBS@ -L$(G4LIB)
+ 
+ ifeq ($(G4SYSTEM),Darwin-g++)
+ OGLLIBS=@OGLLIBS@
\ No newline at end of file
diff --git a/patches/samplerdebug.diff b/patches/samplerdebug.diff
new file mode 100644
index 0000000..ad49a17
--- /dev/null
+++ b/patches/samplerdebug.diff
@@ -0,0 +1,32 @@
+diff --git a/src/src/BDSSamplerSD.cc b/src/src/BDSSamplerSD.cc
+index 6488918..c0d18e9 100755
+--- a/src/src/BDSSamplerSD.cc
++++ b/src/src/BDSSamplerSD.cc
+@@ -77,6 +77,7 @@ G4bool BDSSamplerSD::ProcessHits(G4Step*aStep,G4TouchableHistory*ROhist)
+       //total track energy
+       G4double energy = theTrack->GetKineticEnergy()+
+ 	theTrack->GetDefinition()->GetPDGMass();
++      G4cout << "BDSSamplerSD::ProcessHits():> energy = " << energy << G4endl;
+       //current particle position (global)
+       G4ThreeVector pos = theTrack->GetPosition();
+       //total track length
+@@ -109,6 +110,10 @@ G4bool BDSSamplerSD::ProcessHits(G4Step*aStep,G4TouchableHistory*ROhist)
+       G4double xPrime=LocalDirection.x();
+       G4double yPrime=LocalDirection.y();
+       G4double zPrime=LocalDirection.z();
++      G4cout << "BDSSamplerSD::ProcessHits():> Primes = " << xPrime << " " << yPrime << " " << zPrime << G4endl;
++      G4cout << "BDSSamplerSD::ProcessHits():> Pos = " << x << " " << y << " " << z << G4endl;
++      G4cout << "BDSSamplerSD::tf:>  Netrotation = " << tf.NetRotation() << G4endl;
++      G4cout << "BDSSamplerSD::tf:>  NetTranslation = "<< tf.NetTranslation().x() << " " << tf.NetTranslation().y()  << " " << tf.NetTranslation().z() << G4endl;
+ 
+       // Changed z output by Samplers to be the position of the sampler
+       // not time of flight of the particle JCC 15/10/05
+@@ -192,6 +197,8 @@ G4bool BDSSamplerSD::ProcessHits(G4Step*aStep,G4TouchableHistory*ROhist)
+       smpHit->SetGlobalYPrime(momDir.y());
+       smpHit->SetGlobalZPrime(momDir.z());
+       smpHit->SetType(itsType);
++      G4cout << "BDSSamplerSD::ProcessHits():> GlobPrimes = " << momDir.x() << " " << momDir.y() << " " << momDir.z() << G4endl;
++      G4cout << "BDSSamplerSD::ProcessHits():> GlobPos = " << pos.x() << " " << pos.y() << " " << pos.z() << G4endl;
+ 
+       SamplerCollection->insert(smpHit);
+       if(theTrack->GetVolume()!=theTrack->GetNextVolume())StoreHit=true;
diff --git a/src/BDSOutput.cc b/src/BDSOutput.cc
index 24bfedf..cc9297f 100755
--- a/src/BDSOutput.cc
+++ b/src/BDSOutput.cc
@@ -39,7 +39,7 @@ void BDSOutput::SetFormat(G4int val)
       G4cout<<"output format ASCII, filename: "<<filename<<G4endl;
       of.open(filename);
       of<<"### BDSIM output created "<<ctime(&tm)<<" ####"<<G4endl;
-      of<<"# PT E[GeV] X[mum] Y[mum] Z[m] Xp[rad] Yp[rad]  "<<G4endl;
+      of<<"# EventID PT E[GeV] X[mum] Y[mum] Z[m] Xp[rad] Yp[rad]  "<<G4endl;
 
     }
   if( format == _ROOT)
@@ -171,7 +171,9 @@ void BDSOutput::WriteHits(BDSSamplerHitsCollection *hc)
     
     for (G4int i=0; i<hc->entries(); i++)
       {
-	of<<(*hc)[i]->GetPDGtype()
+	of<<(*hc)[i]->GetEventNo()
+	  <<" "
+	  <<(*hc)[i]->GetPDGtype()
 	  <<" "
 	  <<(*hc)[i]->GetMom()/GeV
 	  <<" "
@@ -393,7 +395,7 @@ void BDSOutput::WriteEnergyLoss(BDSEnergyCounterHitsCollection* hc)
 	G4int partID = (*hc)[i]->GetPartID();
 	G4int parentID = (*hc)[i]->GetParentID();
 	
-	of<<EWeightZ/m<<"  "<<Energy/GeV<<"  "<<partID<<"  "<<parentID<<G4endl;
+// 	of<<EWeightZ/m<<"  "<<Energy/GeV<<"  "<<partID<<"  "<<parentID<<G4endl;
 
       }
       of.flush();
diff --git a/src/ggmad.cc b/src/ggmad.cc
index a6e13f6..26884bb 100755
--- a/src/ggmad.cc
+++ b/src/ggmad.cc
@@ -14,6 +14,7 @@
 
 #include "BDSAcceleratorComponent.hh"
 #include "ggmad.hh"
+#include <cstring>
 
 using namespace std;
 
